global:
  namespace: default

postgres:
  image: postgres:16-alpine
  persistence:
    enabled: true
    storageClass: ""
    size: 1Gi
  service:
    port: 5432  # Internal port
    nodePort: 5433  # External port
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

api:
  image: umesh3149044/api:latest
  replicas: 1
  service:
    type: ClusterIP
    port: 6000  # HTTP port
    httpsPort: 6001  # HTTPS port
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 80

ui:
  image: umesh3149044/ui:latest
  replicas: 1
  buildArgs:
    VITE_API_URL: /api
  service:
    type: ClusterIP
    port: 80  # Container port
    nodePort: 5173  # External port
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Access-Control-Allow-Origin: $http_origin";
  hosts:
    - host: multi-tier.local
      paths:
        - path: /api
          pathType: Prefix
          service: api
          port: 6000
        - path: /
          pathType: Prefix
          service: ui
          port: 80

# Database configuration
database:
  host: postgres
  port: 5432
  name: eventbooking
  user: postgres
  # The actual password will be stored in a secret
  password: local