version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: eventbooking
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: local
    ports:
      - "5432:5432"
    volumes:
      - type: volume
        source: postgres_data_dev
        target: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - eventbooking_network

  api:
    build:
      context: ./api
      dockerfile: EventBooking.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=eventbooking;Username=postgres;Password=local
      - ASPNETCORE_URLS=http://*:5000;https://*:5001
      - AllowedOrigins__0=http://localhost:5173,http://localhost:80
    ports:
      - 5000:5000
      - 5001:5001
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eventbooking_network

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=https://api:5001
      - VITE_API_BASE_URL=https://api:5001
    ports:
      - 80:80
    depends_on:
      - api
    networks:
      - eventbooking_network

networks:
  eventbooking_network:
    name: eventbooking_network
    driver: bridge

volumes:
  postgres_data_dev:
    external: true 